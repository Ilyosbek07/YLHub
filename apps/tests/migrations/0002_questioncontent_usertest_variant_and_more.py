# Generated by Django 4.2.5 on 2023-09-14 11:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('course', '0007_alter_coursecertificate_certificate_and_more'),
        ('tests', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='test_question/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'mp3', 'wav', 'ogg', 'mp4', 'avi', 'mov'])], verbose_name='File')),
            ],
            options={
                'verbose_name': 'Question Content',
                'verbose_name_plural': 'Questions Contents',
            },
        ),
        migrations.CreateModel(
            name='UserTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_finish', models.BooleanField(default=False, verbose_name='Is Finish')),
            ],
            options={
                'verbose_name': 'User Test',
                'verbose_name_plural': 'User Tests',
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(verbose_name='name')),
                ('order', models.IntegerField(verbose_name='Order')),
                ('is_answer', models.BooleanField(default=False, verbose_name='Is Answer')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.RenameField(
            model_name='question',
            old_name='text',
            new_name='name',
        ),
        migrations.RemoveField(
            model_name='test',
            name='subject',
        ),
        migrations.AddField(
            model_name='question',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='question',
            name='type',
            field=models.CharField(choices=[('order', 'Choice Order'), ('multi', 'Multi Select'), ('single', 'Single Select')], default=None, max_length=125, verbose_name='Type'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='question',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='test',
            name='course',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='course_test', to='course.course', verbose_name='Course'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='test',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='test',
            name='is_resubmit',
            field=models.BooleanField(default=False, verbose_name='Is Resubmit'),
        ),
        migrations.AddField(
            model_name='test',
            name='title',
            field=models.CharField(default=1, max_length=125, verbose_name='title'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='test',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='question',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_question', to='tests.test', verbose_name='Test'),
        ),
        migrations.AlterField(
            model_name='test',
            name='duration_time',
            field=models.IntegerField(default=12, verbose_name='Duration Time'),
            preserve_default=False,
        ),
        migrations.DeleteModel(
            name='QuestionAnswer',
        ),
        migrations.DeleteModel(
            name='Subject',
        ),
        migrations.AddField(
            model_name='variant',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_variant', to='tests.test', verbose_name='Test'),
        ),
        migrations.AddField(
            model_name='usertest',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test', to='tests.test'),
        ),
        migrations.AddField(
            model_name='usertest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_test', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='questioncontent',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_content', to='tests.question', verbose_name='Question'),
        ),
    ]
